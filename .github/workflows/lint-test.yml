name: Lint and Test
on: [push]

jobs:
  lint:
    runs-on: ubuntu-latest
    container:
      image: quay.io/pantheon-public/build-tools-ci:8.x-php7.4
      options: --user root
    name: Lint

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ~/vendor
        key: test-lint-dependencies-{{ checksum "composer.json" }}
        restore-keys: test-lint-dependencies-{{ checksum "composer.json" }}

    - name: Install dependencies
      run: composer install -n --prefer-dist

    - name: Run PHP Lint
      run: composer phpcs

#  phpunit:
#    runs-on: ubuntu-latest
#    container:
#      image: danielbachhuber/solr-wp:0.1.0
#      options: --user root
#    services:
#      mariadb:
#        image: mariadb:10.3
#    env:
#      WP_TESTS_DIR: /tmp/wordpress-tests-lib
#      WP_CORE_DIR: /tmp/wordpress/
#    name: PHP Unit tests

#    steps:
#    - name: Setup PHP
#      uses: shivammathur/setup-php@v2
#      with:
#        php-version: 7.4

#    - name: Checkout code
#      uses: actions/checkout@v2

#    - name: Cache dependencies
#      uses: actions/cache@v2
#      with:
#        path: ~/vendor
#        key: test-phpunit-dependencies-{{ checksum "composer.json" }}
#        restore-keys: test-phpunit-dependencies-{{ checksum "composer.json" }}

#    - name: Add PUBKEYs
#    run: sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4EB27DB2A3B88B8B

#    - name: Install Extras 
#    run: |
#      sudo apt-get update
#      sudo apt-get install subversion
#      sudo apt-get install -y libmagickwand-dev --no-install-recommends
#      yes '' | sudo pecl install imagick || true
#      sudo docker-php-ext-enable imagick
#      sudo docker-php-ext-install mysqli
#      sudo apt-get install mariadb-client-10.5
    
#    - name: "Run Tests"
#    run: |
#      bash bin/install-wp-tests.sh wordpress_test root '' 127.0.0.1 latest
#      composer phpunit
#      rm -rf $WP_TESTS_DIR $WP_CORE_DIR
#      bash bin/install-wp-tests.sh wordpress_test root '' 127.0.0.1 nightly true
#      WP_MULTISITE=1 composer phpunit


  test-behat:
    # needs: lint
    runs-on: ubuntu-latest
    container:
      image: quay.io/pantheon-public/build-tools-ci:6.x
      options: --user root
    env:
      TERMINUS_TOKEN: ${{ secrets.TERMINUS_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TERMINUS_ENV: ci-${{github.run_number}}
      TERMINUS_SITE: solr-power
      SITE_ENV: solr-power.ci-${{github.run_number}}
      WORDPRESS_ADMIN_USERNAME: pantheon
      WORDPRESS_ADMIN_EMAIL: no-reply@getpantheon.com
      WORDPRESS_ADMIN_PASSWORD: $(openssl rand -hex 8)
    name: Behat tests

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Install SSH key
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SITE_OWNER_SSH_PRIVATE_KEY }}

    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ~/vendor
        key: test-behat-dependencies-{{ checksum "composer.json" }}
        restore-keys: test-behat-dependencies-{{ checksum "composer.json" }}

    - name: Check for $GITHUB_TOKEN
      run: |
        if [ -z "$GITHUB_TOKEN" ]; then
          echo "GITHUB_TOKEN environment variables missing; assuming unauthenticated build"
          exit 0
        fi
        echo "Setting GitHub OAuth token with suppressed ouput"
        {
          composer config -g github-oauth.github.com $GITHUB_TOKEN
        } &> /dev/null

    - name: Check for $TERMINUS_TOKEN
      run: |
        if [ -z "$TERMINUS_TOKEN" ]; then
          echo "TERMINUS_TOKEN environment variables missing; assuming unauthenticated build"
          exit 0
        fi
        terminus auth:login --machine-token=$TERMINUS_TOKEN

    - name: Prepare for Behat tests  
      run: ./bin/behat-prepare.sh

    - name: Execute Behat tests
      run: ./bin/behat-test.sh --strict

    - name: Clean up Behat tests
      run: ./bin/behat-cleanup.sh